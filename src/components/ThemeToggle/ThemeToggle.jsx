import { useEffect, useState } from 'react';
import styles from './ThemeToggle.module.css';

export function ThemeToggle() {
    const [currentTheme, setCurrentTheme] = useState(null);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Ç–µ–º—É –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    useEffect(() => {
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersLight = window.matchMedia(
            '(prefers-color-scheme: light)',
        ).matches;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–µ–º—É
        let initialTheme = 'dark'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç—ë–º–Ω–∞—è
        if (savedTheme === 'light' || (!savedTheme && systemPrefersLight)) {
            initialTheme = 'light';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É –≤ DOM –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        document.documentElement.setAttribute('data-theme', initialTheme);
        setCurrentTheme(initialTheme);
    }, []);

    const toggleTheme = () => {
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';

        // –û–±–Ω–æ–≤–ª—è–µ–º DOM, localStorage –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        setCurrentTheme(newTheme);
    };

    // –ü–æ–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Ç–µ–º—É, –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º (–∏–ª–∏ –∑–∞–≥–ª—É—à–∫—É)
    if (currentTheme === null) return null;

    return (
        <button className={styles['button']} onClick={toggleTheme}>
            {currentTheme === 'light' ? 'üåô' : '‚òÄÔ∏è'}
        </button>
    );
}
